import { Root as Root$1 } from '../../react-arrow/dist/index.module.js';
import { Primitive } from '../../react-primitive/dist/index.module.js';
import { useSize } from '../../react-use-size/dist/index.module.js';
import { useRect } from '../../react-use-rect/dist/index.module.js';
import { createContextScope } from '../../react-context/dist/index.module.js';
import { useComposedRefs } from '../../react-compose-refs/dist/index.module.js';
import { getPlacementData } from '../../popper/dist/index.module.js';
import * as React from 'react';
import _extends from '../../../@babel/runtime/helpers/esm/extends.js';

const [c,l]=createContextScope("Popper");const[f,d]=c("Popper");const Popper=e=>{const{__scopePopper:o,children:r}=e,[t,n]=React.useState(null);return React.createElement(f,{scope:o,anchor:t,onAnchorChange:n},r)};const PopperAnchor=/*#__PURE__*/React.forwardRef(((e,r)=>{const{__scopePopper:t,virtualRef:n,...p}=e,c=d("PopperAnchor",t),l=React.useRef(null),f=useComposedRefs(r,l);return React.useEffect((()=>{c.onAnchorChange((null==n?void 0:n.current)||l.current);})),n?null:/*#__PURE__*/React.createElement(Primitive.div,_extends({},p,{ref:f}))}));const[u,m]=c("PopperContent");const PopperContent=/*#__PURE__*/React.forwardRef(((e,n)=>{const{__scopePopper:c,side:l="bottom",sideOffset:f,align:m="center",alignOffset:w,collisionTolerance:h,avoidCollisions:x=!0,...v}=e,P=d("PopperContent",c),[A,g]=React.useState(),E=useRect(P.anchor),[y,C]=React.useState(null),S=useSize(y),[R,O]=React.useState(null),_=useSize(R),b=useComposedRefs(n,(e=>C(e))),z=function(){const[e,o]=React.useState(void 0);return React.useEffect((()=>{let e;function r(){o({width:window.innerWidth,height:window.innerHeight});}function t(){window.clearTimeout(e),e=window.setTimeout(r,100);}return r(),window.addEventListener("resize",t),()=>window.removeEventListener("resize",t)}),[]),e}(),T=z?DOMRect.fromRect({...z,x:0,y:0}):void 0,{popperStyles:k,arrowStyles:L,placedSide:B,placedAlign:D}=getPlacementData({anchorRect:E,popperSize:S,arrowSize:_,arrowOffset:A,side:l,sideOffset:f,align:m,alignOffset:w,shouldAvoidCollisions:x,collisionBoundariesRect:T,collisionTolerance:h}),H=void 0!==B;return React.createElement("div",{style:k,"data-radix-popper-content-wrapper":""},/*#__PURE__*/React.createElement(u,{scope:c,arrowStyles:L,onArrowChange:O,onArrowOffsetChange:g},/*#__PURE__*/React.createElement(Primitive.div,_extends({"data-side":B,"data-align":D},v,{style:{...v.style,animation:H?void 0:"none"},ref:b}))))}));const PopperArrow=/*#__PURE__*/React.forwardRef((function(o,r){const{__scopePopper:t,offset:n,...i}=o,p=m("PopperArrow",t),{onArrowOffsetChange:c}=p;return React.useEffect((()=>c(n)),[c,n]),/*#__PURE__*/React.createElement("span",{style:{...p.arrowStyles,pointerEvents:"none"}},/*#__PURE__*/React.createElement("span",{ref:p.onArrowChange,style:{display:"inline-block",verticalAlign:"top",pointerEvents:"auto"}},/*#__PURE__*/React.createElement(Root$1,_extends({},i,{ref:r,style:{...i.style,display:"block"}}))))}));const Root=Popper;const Anchor=PopperAnchor;const Content=PopperContent;const Arrow=PopperArrow;

export { Anchor, Arrow, Content, Popper, PopperAnchor, PopperArrow, PopperContent, Root, l as createPopperScope };
